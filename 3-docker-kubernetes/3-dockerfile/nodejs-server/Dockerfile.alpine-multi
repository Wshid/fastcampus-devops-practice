#
# nodejs-server
#
# build:
#   docker build --force-rm -t nodejs-server .
# run:
#   docker run --rm -it --name nodejs-server nodejs-server
#

## multi-stage pipeline
## FROM ... AS 문법 정리
## 하나의 블록을 정의하는 경우
## base, build, release 블록 존재
## base를 기준으로 build, release가 수행됨
## docker build --force-rm -t nodejs-server:alpine-multi -f Dockerfile.alpine-multi .
FROM node:16-alpine AS base
LABEL maintainer="FastCampus Park <fastcampus@fastcampus.com>"
LABEL description="Simple server with Node.js"

# Create app directory
WORKDIR /app

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY package*.json ./


FROM base AS build
RUN npm install
# If you are building your code for production
# RUN npm ci --only=production


FROM base AS release
## --from=build, 빌드 스테이지에서 파일을 복사함
COPY --from=build /app/node_modules ./node_modules
# Bundle app source
COPY . .

EXPOSE 8080
CMD [ "node", "server.js" ]
